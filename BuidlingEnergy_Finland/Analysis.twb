<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.1004.1720                               -->
<workbook source-build='10.0.2 (10000.16.1004.1720)' source-platform='win' version='10.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='finland_allBuilding_allWeather' inline='true' name='federated.1bz55lj1rrqmy3126s01j0tb3ud8' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='finland_allBuilding_allWeather' name='textscan.1b2rvh50pfw29v15guw431aw1dk4'>
            <connection class='textscan' directory='C:/Users/lalit/Dropbox/NEU_Curriculum/SEM4-Fall16/Advances Data Science_Architecture/GitLocal/BuidlingEnergy_Finland' filename='finland_allBuilding_allWeather.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1b2rvh50pfw29v15guw431aw1dk4' name='finland_allBuilding_allWeather.csv' table='[finland_allBuilding_allWeather#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='integer' name='hour' ordinal='2' />
            <column datatype='string' name='vac' ordinal='3' />
            <column datatype='string' name='type' ordinal='4' />
            <column datatype='integer' name='Consumption' ordinal='5' />
            <column datatype='integer' name='month' ordinal='6' />
            <column datatype='integer' name='Day.of.Week' ordinal='7' />
            <column datatype='integer' name='weekday' ordinal='8' />
            <column datatype='integer' name='Base_hour_Flag' ordinal='9' />
            <column datatype='integer' name='Holiday' ordinal='10' />
            <column datatype='string' name='City' ordinal='11' />
            <column datatype='real' name='consumption Kwh/sqm' ordinal='12' />
            <column datatype='real' name='base_hr_usage' ordinal='13' />
            <column datatype='string' name='Base_Hour_Class' ordinal='14' />
            <column datatype='real' name='TemperatureF' ordinal='15' />
            <column datatype='real' name='Dew_PointF' ordinal='16' />
            <column datatype='real' name='Humidity' ordinal='17' />
            <column datatype='real' name='Sea_Level_PressureIn' ordinal='18' />
            <column datatype='real' name='VisibilityMPH' ordinal='19' />
            <column datatype='real' name='Wind_SpeedMPH' ordinal='20' />
            <column datatype='real' name='WindDirDegrees' ordinal='21' />
            <column datatype='string' name='Conditions' ordinal='22' />
            <column datatype='string' name='Wind_Direction' ordinal='23' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[finland_allBuilding_allWeather.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[finland_allBuilding_allWeather.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[finland_allBuilding_allWeather.csv]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vac</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vac]</local-name>
            <parent-name>[finland_allBuilding_allWeather.csv]</parent-name>
            <remote-alias>vac</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[finland_allBuilding_allWeather.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Consumption]</local-name>
            <parent-name>[finland_allBuilding_allWeather.csv]</parent-name>
            <remote-alias>Consumption</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[finland_allBuilding_allWeather.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Day.of.Week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Day.of.Week]</local-name>
            <parent-name>[finland_allBuilding_allWeather.csv]</parent-name>
            <remote-alias>Day.of.Week</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekday]</local-name>
            <parent-name>[finland_allBuilding_allWeather.csv]</parent-name>
            <remote-alias>weekday</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Base_hour_Flag</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Base_hour_Flag]</local-name>
            <parent-name>[finland_allBuilding_allWeather.csv]</parent-name>
            <remote-alias>Base_hour_Flag</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Holiday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Holiday]</local-name>
            <parent-name>[finland_allBuilding_allWeather.csv]</parent-name>
            <remote-alias>Holiday</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[finland_allBuilding_allWeather.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>consumption Kwh/sqm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[consumption Kwh/sqm]</local-name>
            <parent-name>[finland_allBuilding_allWeather.csv]</parent-name>
            <remote-alias>consumption Kwh/sqm</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>base_hr_usage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[base_hr_usage]</local-name>
            <parent-name>[finland_allBuilding_allWeather.csv]</parent-name>
            <remote-alias>base_hr_usage</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Base_Hour_Class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Base_Hour_Class]</local-name>
            <parent-name>[finland_allBuilding_allWeather.csv]</parent-name>
            <remote-alias>Base_Hour_Class</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TemperatureF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TemperatureF]</local-name>
            <parent-name>[finland_allBuilding_allWeather.csv]</parent-name>
            <remote-alias>TemperatureF</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dew_PointF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dew_PointF]</local-name>
            <parent-name>[finland_allBuilding_allWeather.csv]</parent-name>
            <remote-alias>Dew_PointF</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Humidity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Humidity]</local-name>
            <parent-name>[finland_allBuilding_allWeather.csv]</parent-name>
            <remote-alias>Humidity</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sea_Level_PressureIn</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sea_Level_PressureIn]</local-name>
            <parent-name>[finland_allBuilding_allWeather.csv]</parent-name>
            <remote-alias>Sea_Level_PressureIn</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VisibilityMPH</remote-name>
            <remote-type>5</remote-type>
            <local-name>[VisibilityMPH]</local-name>
            <parent-name>[finland_allBuilding_allWeather.csv]</parent-name>
            <remote-alias>VisibilityMPH</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wind_SpeedMPH</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wind_SpeedMPH]</local-name>
            <parent-name>[finland_allBuilding_allWeather.csv]</parent-name>
            <remote-alias>Wind_SpeedMPH</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WindDirDegrees</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WindDirDegrees]</local-name>
            <parent-name>[finland_allBuilding_allWeather.csv]</parent-name>
            <remote-alias>WindDirDegrees</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Conditions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Conditions]</local-name>
            <parent-name>[finland_allBuilding_allWeather.csv]</parent-name>
            <remote-alias>Conditions</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wind_Direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Wind_Direction]</local-name>
            <parent-name>[finland_allBuilding_allWeather.csv]</parent-name>
            <remote-alias>Wind_Direction</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[finland_allBuilding_allWeather.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Base Hour Class' datatype='string' name='[Base_Hour_Class]' role='dimension' type='nominal' />
      <column caption='Base hour Flag' datatype='integer' name='[Base_hour_Flag]' role='measure' type='quantitative' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Consumption (bin)' datatype='integer' name='[Consumption (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='2' formula='[Consumption]' peg='0' size='200' />
      </column>
      <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Day.of.Week]' role='dimension' type='quantitative' />
      <column caption='Dew PointF' datatype='real' name='[Dew_PointF]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[Holiday]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Sea Level PressureIn' datatype='real' name='[Sea_Level_PressureIn]' role='measure' type='quantitative' />
      <column caption='Temperature F' datatype='real' name='[TemperatureF]' role='measure' type='quantitative' />
      <column caption='Visibility MPH' datatype='real' name='[VisibilityMPH]' role='measure' type='quantitative' />
      <column caption='Wind Dir Degrees' datatype='real' name='[WindDirDegrees]' role='measure' type='quantitative' />
      <column caption='Wind Direction' datatype='string' name='[Wind_Direction]' role='dimension' type='nominal' />
      <column caption='Wind SpeedMPH' datatype='real' name='[Wind_SpeedMPH]' role='measure' type='quantitative' />
      <column caption='Base Hr Usage' datatype='real' name='[base_hr_usage]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Dist_Heating&quot;' value='Heat' />
          <alias key='&quot;elect&quot;' value='Electricity' />
        </aliases>
      </column>
      <column caption='Building' datatype='string' name='[vac]' role='dimension' type='nominal' />
      <column caption='Weekday' datatype='integer' name='[weekday]' role='measure' type='quantitative' />
      <column-instance column='[Dew_PointF]' derivation='Avg' name='[avg:Dew_PointF:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sea_Level_PressureIn]' derivation='Avg' name='[avg:Sea_Level_PressureIn:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TemperatureF]' derivation='Avg' name='[avg:TemperatureF:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Holiday]' derivation='None' name='[none:Holiday:qk]' pivot='key' type='quantitative' />
      <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
      <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
      <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Holiday]' derivation='Sum' name='[sum:Holiday:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='false' units='records'>
        <connection class='dataengine' dbname='C:\Users\lalit\Documents\My Tableau Repository\Datasources\finland_allBuilding_allWeather.tde' schema='Extract' tablename='Extract' update-time='11/12/2016 12:33:00 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='410832' timestamp-start='2016-11-12 00:33:00.869' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Base_Hour_Class</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Base_Hour_Class]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Base_Hour_Class</remote-alias>
              <ordinal>0</ordinal>
              <family>finland_allBuilding_allWeather.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;High&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Low&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>410832</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Base_hour_Flag</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Base_hour_Flag]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Base_hour_Flag</remote-alias>
              <ordinal>1</ordinal>
              <family>finland_allBuilding_allWeather.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>119826.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.29166666666666669</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.45453022462608744</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.45452967144315476</statistic>
                <statistic aggregation='Var' datatype='real'>0.20659772509864152</statistic>
                <statistic aggregation='VarP' datatype='real'>0.20659722222222221</statistic>
                <statistic aggregation='Count' datatype='integer'>410832</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>119826.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>2</ordinal>
              <family>finland_allBuilding_allWeather.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;EFHF&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;EFHK&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>410832</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Conditions</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Conditions]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Conditions</remote-alias>
              <ordinal>3</ordinal>
              <family>finland_allBuilding_allWeather.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>38</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Clear&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Unknown&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>410759</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Consumption</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Consumption]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Consumption</remote-alias>
              <ordinal>4</ordinal>
              <family>finland_allBuilding_allWeather.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1362</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>3070</statistic>
                <statistic aggregation='Count' datatype='integer'>410832</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Day.of.Week</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Day.of.Week]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Day.of.Week</remote-alias>
              <ordinal>5</ordinal>
              <family>finland_allBuilding_allWeather.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>7</statistic>
                <statistic aggregation='Count' datatype='integer'>410832</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Dew_PointF</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Dew_PointF]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Dew_PointF</remote-alias>
              <ordinal>6</ordinal>
              <family>finland_allBuilding_allWeather.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>541</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-26.600000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>68.900000000000006</statistic>
                <statistic aggregation='Count' datatype='integer'>410832</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>3</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>7</ordinal>
              <family>finland_allBuilding_allWeather.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>410832</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>84391671528.0</statistic>
                <statistic aggregation='Avg' datatype='real'>205416.5</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>410832</statistic>
                <statistic aggregation='Stdev' datatype='real'>118597.12723246368</statistic>
                <statistic aggregation='StdevP' datatype='real'>118596.98289463288</statistic>
                <statistic aggregation='Var' datatype='real'>14065278587.793179</statistic>
                <statistic aggregation='VarP' datatype='real'>14065244351.709845</statistic>
                <statistic aggregation='Count' datatype='integer'>410832</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>23113894261933072.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Holiday</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Holiday]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Holiday</remote-alias>
              <ordinal>8</ordinal>
              <family>finland_allBuilding_allWeather.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>410832</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Humidity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Humidity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Humidity</remote-alias>
              <ordinal>9</ordinal>
              <family>finland_allBuilding_allWeather.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>338</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>13.0</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Count' datatype='integer'>410832</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>10</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>410832</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sea_Level_PressureIn</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sea_Level_PressureIn]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sea_Level_PressureIn</remote-alias>
              <ordinal>11</ordinal>
              <family>finland_allBuilding_allWeather.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>444</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>28.739999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>30.57</statistic>
                <statistic aggregation='Count' datatype='integer'>410832</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TemperatureF</remote-name>
              <remote-type>5</remote-type>
              <local-name>[TemperatureF]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TemperatureF</remote-alias>
              <ordinal>12</ordinal>
              <family>finland_allBuilding_allWeather.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>651</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-21.100000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>86.0</statistic>
                <statistic aggregation='Count' datatype='integer'>410832</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VisibilityMPH</remote-name>
              <remote-type>5</remote-type>
              <local-name>[VisibilityMPH]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>VisibilityMPH</remote-alias>
              <ordinal>13</ordinal>
              <family>finland_allBuilding_allWeather.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>234</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.050000000000000003</statistic>
                <statistic aggregation='Max' datatype='real'>19.0</statistic>
                <statistic aggregation='Count' datatype='integer'>410832</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WindDirDegrees</remote-name>
              <remote-type>5</remote-type>
              <local-name>[WindDirDegrees]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WindDirDegrees</remote-alias>
              <ordinal>14</ordinal>
              <family>finland_allBuilding_allWeather.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>190</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>360.0</statistic>
                <statistic aggregation='Count' datatype='integer'>410832</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Wind_Direction</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Wind_Direction]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Wind_Direction</remote-alias>
              <ordinal>15</ordinal>
              <family>finland_allBuilding_allWeather.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Calm&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WSW&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>410832</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Wind_SpeedMPH</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Wind_SpeedMPH]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Wind_SpeedMPH</remote-alias>
              <ordinal>16</ordinal>
              <family>finland_allBuilding_allWeather.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>299</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>32.25</statistic>
                <statistic aggregation='Count' datatype='integer'>410832</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>base_hr_usage</remote-name>
              <remote-type>4</remote-type>
              <local-name>[base_hr_usage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>base_hr_usage</remote-alias>
              <ordinal>17</ordinal>
              <family>finland_allBuilding_allWeather.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2158</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>2447.5</statistic>
                <statistic aggregation='Count' datatype='integer'>410832</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>consumption Kwh/sqm</remote-name>
              <remote-type>5</remote-type>
              <local-name>[consumption Kwh/sqm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>consumption Kwh/sqm</remote-alias>
              <ordinal>18</ordinal>
              <family>finland_allBuilding_allWeather.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9589</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.59999999999999998</statistic>
                <statistic aggregation='Count' datatype='integer'>410832</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>19</ordinal>
              <family>finland_allBuilding_allWeather.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>342</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2013-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2013-12-08#</statistic>
                <statistic aggregation='Count' datatype='integer'>410832</statistic>
                <statistic aggregation='Median' datatype='date'>#2013-06-18#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hour</remote-name>
              <remote-type>16</remote-type>
              <local-name>[hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hour</remote-alias>
              <ordinal>20</ordinal>
              <family>finland_allBuilding_allWeather.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4724568.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>23</statistic>
                <statistic aggregation='Stdev' datatype='real'>6.9221949770422624</statistic>
                <statistic aggregation='StdevP' datatype='real'>6.9221865524317288</statistic>
                <statistic aggregation='Var' datatype='real'>47.916783300189131</statistic>
                <statistic aggregation='VarP' datatype='real'>47.916666666666664</statistic>
                <statistic aggregation='Count' datatype='integer'>410832</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>74018232.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>16</remote-type>
              <local-name>[month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>21</ordinal>
              <family>finland_allBuilding_allWeather.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>12</statistic>
                <statistic aggregation='Count' datatype='integer'>410832</statistic>
                <statistic aggregation='Median' datatype='integer'>6</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type</remote-alias>
              <ordinal>22</ordinal>
              <family>finland_allBuilding_allWeather.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Dist_Heating&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;elect&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>410832</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>vac</remote-name>
              <remote-type>129</remote-type>
              <local-name>[vac]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>vac</remote-alias>
              <ordinal>23</ordinal>
              <family>finland_allBuilding_allWeather.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Building 1&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Building 8&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>410832</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekday</remote-name>
              <remote-type>16</remote-type>
              <local-name>[weekday]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekday</remote-alias>
              <ordinal>24</ordinal>
              <family>finland_allBuilding_allWeather.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>410832</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.428571' measure-ordering='alphabetic' measure-percentage='0.571429' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Dist_Heating&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;elect&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[avg:Sea_Level_PressureIn:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:Holiday:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[sum:Holiday:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[sum:Consumption:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[avg:Dew_PointF:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[avg:TemperatureF:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:vac:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Building 13&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Building 8&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Building 11&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Building 14&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Consumption By Building(Each Day)'>
      <table>
        <view>
          <datasources>
            <datasource caption='finland_allBuilding_allWeather' name='federated.1bz55lj1rrqmy3126s01j0tb3ud8' />
          </datasources>
          <datasource-dependencies datasource='federated.1bz55lj1rrqmy3126s01j0tb3ud8'>
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Dist_Heating&quot;' value='Heat' />
                <alias key='&quot;elect&quot;' value='Electricity' />
              </aliases>
            </column>
            <column caption='Building' datatype='string' name='[vac]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:vac:nk]'>
            <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 4&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:vac:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#ff000062' />
            <format attr='stroke-size' id='refline1' value='3' />
            <format attr='line-pattern' id='refline1' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:type:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[sum:Consumption:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[sum:Consumption:qk]' z-order='1' />
            <reference-line axis-column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[sum:Consumption:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[sum:Consumption:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:type:nk] * [federated.1bz55lj1rrqmy3126s01j0tb3ud8].[sum:Consumption:qk])</rows>
        <cols>[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[tdy:date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Consumption By RunningTotal'>
      <table>
        <view>
          <datasources>
            <datasource caption='finland_allBuilding_allWeather' name='federated.1bz55lj1rrqmy3126s01j0tb3ud8' />
          </datasources>
          <datasource-dependencies datasource='federated.1bz55lj1rrqmy3126s01j0tb3ud8'>
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column-instance column='[Consumption]' derivation='Sum' name='[cum:sum:Consumption:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Dist_Heating&quot;' value='Heat' />
                <alias key='&quot;elect&quot;' value='Electricity' />
              </aliases>
            </column>
            <column caption='Building' datatype='string' name='[vac]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:vac:nk]'>
            <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 16&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:vac:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#ff000062' />
            <format attr='stroke-size' id='refline1' value='3' />
            <format attr='line-pattern' id='refline1' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[cum:sum:Consumption:qk]</rows>
        <cols>[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[mn:date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Consumption Overall Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='finland_allBuilding_allWeather' name='federated.1bz55lj1rrqmy3126s01j0tb3ud8' />
          </datasources>
          <datasource-dependencies datasource='federated.1bz55lj1rrqmy3126s01j0tb3ud8'>
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Dist_Heating&quot;' value='Heat' />
                <alias key='&quot;elect&quot;' value='Electricity' />
              </aliases>
            </column>
            <column caption='Building' datatype='string' name='[vac]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:type:nk]' direction='DESC' using='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[sum:Consumption:qk]' />
          <filter class='categorical' column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:vac:nk]'>
            <groupfilter from='&quot;Building 1&quot;' function='range' level='[none:vac:nk]' to='&quot;Building 8&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:vac:nk]' direction='DESC' using='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[sum:Consumption:qk]' />
          <slices>
            <column>[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:vac:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[sum:Consumption:qk]' value='#e6ecf0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[sum:Consumption:qk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:type:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Type:&#9;</run>
                <run bold='true'>&lt;[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:type:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Building:&#9;</run>
                <run bold='true'>&lt;[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:vac:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Year of Date:&#9;</run>
                <run bold='true'>&lt;[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[yr:date:ok]&gt;</run>
                <run fontcolor='#787878'>&#10;Consumption:&#9;</run>
                <run bold='true'>&lt;[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[sum:Consumption:qk]&gt; Kwh</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:vac:nk] / [federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:type:nk])</rows>
        <cols>([federated.1bz55lj1rrqmy3126s01j0tb3ud8].[yr:date:ok] * [federated.1bz55lj1rrqmy3126s01j0tb3ud8].[sum:Consumption:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Consumption vs Temperature'>
      <table>
        <view>
          <datasources>
            <datasource caption='finland_allBuilding_allWeather' name='federated.1bz55lj1rrqmy3126s01j0tb3ud8' />
          </datasources>
          <datasource-dependencies datasource='federated.1bz55lj1rrqmy3126s01j0tb3ud8'>
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column caption='Temperature F' datatype='real' name='[TemperatureF]' role='measure' type='quantitative' />
            <column-instance column='[TemperatureF]' derivation='Avg' name='[avg:TemperatureF:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Dist_Heating&quot;' value='Heat' />
                <alias key='&quot;elect&quot;' value='Electricity' />
              </aliases>
            </column>
            <column caption='Building' datatype='string' name='[vac]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:vac:nk]'>
            <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 12&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:vac:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[avg:TemperatureF:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='60' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='width' field='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[mn:date:ok]' value='80' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#ff000062' />
            <format attr='stroke-size' id='refline1' value='3' />
            <format attr='line-pattern' id='refline1' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:type:nk]' />
              <color column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month of Date:&#9;</run>
                <run bold='true'>&lt;[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[mn:date:ok]&gt;</run>
                <run fontcolor='#787878'>&#10;Type:&#9;</run>
                <run bold='true'>&lt;[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:type:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Consumption:&#9;</run>
                <run bold='true'>&lt;[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[sum:Consumption:qk]&gt; KwH</run>
                <run fontcolor='#787878'>&#10;Avg. Temperature F:&#9;</run>
                <run bold='true'>&lt;[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[avg:TemperatureF:qk]&gt; F</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[sum:Consumption:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:type:nk]' />
              <color column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month of Date:&#9;</run>
                <run bold='true'>&lt;[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[mn:date:ok]&gt;</run>
                <run fontcolor='#787878'>&#10;Type:&#9;</run>
                <run bold='true'>&lt;[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:type:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Consumption:&#9;</run>
                <run bold='true'>&lt;[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[sum:Consumption:qk]&gt; KwH</run>
                <run fontcolor='#787878'>&#10;Avg. Temperature F:&#9;</run>
                <run bold='true'>&lt;[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[avg:TemperatureF:qk]&gt; F</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='239' />
                <format attr='size' value='0.20790055394172668' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[avg:TemperatureF:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:type:nk]' />
              <color column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month of Date:&#9;</run>
                <run bold='true'>&lt;[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[mn:date:ok]&gt;</run>
                <run fontcolor='#787878'>&#10;Type:&#9;</run>
                <run bold='true'>&lt;[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:type:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Consumption:&#9;</run>
                <run bold='true'>&lt;[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[sum:Consumption:qk]&gt; KwH</run>
                <run fontcolor='#787878'>&#10;Avg. Temperature F:&#9;</run>
                <run bold='true'>&lt;[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[avg:TemperatureF:qk]&gt; F</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.20790055394172668' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:type:nk] * ([federated.1bz55lj1rrqmy3126s01j0tb3ud8].[sum:Consumption:qk] + [federated.1bz55lj1rrqmy3126s01j0tb3ud8].[avg:TemperatureF:qk]))</rows>
        <cols>[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[mn:date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='finland_allBuilding_allWeather' name='federated.1bz55lj1rrqmy3126s01j0tb3ud8' />
          </datasources>
          <datasource-dependencies datasource='federated.1bz55lj1rrqmy3126s01j0tb3ud8'>
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column caption='Dew PointF' datatype='real' name='[Dew_PointF]' role='measure' type='quantitative' />
            <column caption='Temperature F' datatype='real' name='[TemperatureF]' role='measure' type='quantitative' />
            <column-instance column='[Dew_PointF]' derivation='Avg' name='[avg:Dew_PointF:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TemperatureF]' derivation='Avg' name='[avg:TemperatureF:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column caption='Building' datatype='string' name='[vac]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:vac:nk]'>
            <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 12&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:vac:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[avg:Dew_PointF:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='80' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[sum:Consumption:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[avg:Dew_PointF:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[avg:TemperatureF:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1bz55lj1rrqmy3126s01j0tb3ud8].[sum:Consumption:qk] + ([federated.1bz55lj1rrqmy3126s01j0tb3ud8].[avg:Dew_PointF:qk] + [federated.1bz55lj1rrqmy3126s01j0tb3ud8].[avg:TemperatureF:qk]))</rows>
        <cols>([federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:vac:nk] / ([federated.1bz55lj1rrqmy3126s01j0tb3ud8].[yr:date:ok] / [federated.1bz55lj1rrqmy3126s01j0tb3ud8].[mn:date:ok]))</cols>
        <show-full-range>
          <column>[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:Consumption (bin):qk]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='finland_allBuilding_allWeather' name='federated.1bz55lj1rrqmy3126s01j0tb3ud8' />
          </datasources>
          <datasource-dependencies datasource='federated.1bz55lj1rrqmy3126s01j0tb3ud8'>
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Day.of.Week]' role='dimension' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Holiday]' role='dimension' type='ordinal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Day.of.Week]' derivation='None' name='[none:Day.of.Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Holiday]' derivation='None' name='[none:Holiday:ok]' pivot='key' type='ordinal' />
            <column-instance column='[vac]' derivation='None' name='[none:vac:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
            <column caption='Building' datatype='string' name='[vac]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:Day.of.Week:qk]' included-values='in-range'>
            <min>1</min>
            <max>7</max>
          </filter>
          <filter class='categorical' column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:vac:nk]'>
            <groupfilter function='member' level='[none:vac:nk]' member='&quot;Building 21&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:vac:nk]</column>
            <column>[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:Day.of.Week:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:Day.of.Week:qk]' />
              <lod column='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:Holiday:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[sum:Consumption:qk]</rows>
        <cols>[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[twk:date:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='37'>
    <window class='worksheet' name='Consumption Overall Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:type:nk]' type='color' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:type:nk]</field>
            <field>[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:vac:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Consumption By Building(Each Day)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:vac:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Consumption By RunningTotal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:vac:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Consumption vs Temperature'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:vac:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:type:nk]&#10;[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[:Measure Names]</field>
            <field>[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:type:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:vac:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:vac:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:Day.of.Week:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='slider' param='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:vac:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:Day.of.Week:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bz55lj1rrqmy3126s01j0tb3ud8].[none:Day.of.Week:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Consumption By Building(Each Day)' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Consumption By RunningTotal' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Consumption Overall Year' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Consumption vs Temperature' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      ERFAhPca/z8+6/9+fbiMxQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
